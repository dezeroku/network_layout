#!/usr/bin/env bash
set -e

SCRIPTS_DIR="$(readlink -f "$(dirname "$0")")/.."

# shellcheck source=build/scripts/common.sh
. "${SCRIPTS_DIR}"/common.sh
parse_env_args

cd "${BUILDDIR}"

# Insert a file into /etc/custom-version-file
# containing device specific info that was used during the build

if [[ ! -d "${BUILDDIR}/files" ]]; then
	mkdir "${BUILDDIR}/files"
fi

function dump_file() {
	# $1 - file
	# $2 - optional filename override
	local file="${1}"

	if [ -z "${2:-}" ]; then
		filename="${file}"
	else
		filename="${2}"
	fi
	echo "========= <${filename}> ========="
	cat "${file}"
	echo "========= >${filename}< ========="
	echo ""
}

DEVICE_DIR="${SCRIPTS_DIR}/../config/${DEVICE}"

if [ -n "${SCRIPTS_VERSION}" ]; then
	echo SCRIPTS_VERSION="${SCRIPTS_VERSION}"
else
	echo SCRIPTS_VERSION="$(cd "${SCRIPTS_DIR}" && git describe HEAD)"
fi
if [ -n "${SCRIPTS_COMMIT}" ]; then
	echo SCRIPTS_COMMIT="${SCRIPTS_COMMIT}"
else
	echo SCRIPTS_COMMIT="$(cd "${SCRIPTS_DIR}" && git rev-parse HEAD)"
fi

# This should be a list of everything that may affect the build
[ -f "${DEVICE_ENV_FILE}" ] && dump_file "${DEVICE_ENV_FILE}" "variables"
if [ -n "${DEVICE_TEMPLATE_ENV_FILE:-}" ] && [ -f "${DEVICE_TEMPLATE_ENV_FILE}" ]; then
	dump_file "${DEVICE_TEMPLATE_ENV_FILE}" "template_variables"
	# TODO: This is "unofficial" extension of the protocol
	# but it's meant to be followed by all the configs
	# We probably want to make this cleaner
	secret_template_variables_file="$(dirname "${DEVICE_TEMPLATE_ENV_FILE}")/secret-variables"
	if [ -f "${secret_template_variables_file}" ]; then
		dump_file "${secret_template_variables_file}" "secret_template_variables"
	fi
fi
[ -f "${DEVICE_CONFIG_FILE}" ] && dump_file "${DEVICE_CONFIG_FILE}" "config"
dump_file "${DEVICE_DIR}/config.orig" "config.orig"

# Dump the "files/" dir if present
if [ -d "${DEVICE_DIR}/files" ]; then
	find "${DEVICE_DIR}/files" -type f | sort | while read -r f; do
		dump_file "${f}" "${f#"${DEVICE_DIR}/files"}"
	done
fi

# Dump the templated "files/" dir if present
if [ -d "${BUILDDIR}/files" ]; then
	echo "========= TEMPLATED_PART ========="
	find "${BUILDDIR}/files" -type f | sort | while read -r f; do
		if [[ ! "${f}" =~ ^.*\/etc\/custom-version-file$ ]]; then
			dump_file "${f}" "${f#"${BUILDDIR}/files"}"
		fi
	done
fi
